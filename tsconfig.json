{
	"$schema": "https://json.schemastore.org/tsconfig",
	"compilerOptions": {
		"target": "es2015" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */,
		"module": "esnext",
		"lib": ["es2015", "es2016", "es2017", "WebWorker", "dom"],
		"declaration": true,
		"declarationDir": "dist/noop",
		"sourceMap": true /* Generates corresponding '.map' file. */,
		"rootDir": "." /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
		"isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
		"strict": true /* Enable all strict type-checking options. */,
		"moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
		"types": ["node", "@types/jest"] /* Type declaration files to be included in compilation. */,
		"allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
		"esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
		"resolveJsonModule": true,
		"experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
		"emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */,
		/* Advanced Options */
		"skipLibCheck": true /* Skip type checking of declaration files. */,
		"forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
	},
	"exclude": ["dist", "src/**/*.test.ts", "test/fixtures/**/*.ts"]
}
